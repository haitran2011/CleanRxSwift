//
//  SplashViewController.swift
//  CleanRxSwift
//
//  Created by Pedro Brito on 22/06/16.
//  Copyright (c) 2016 pedroml.brito. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import QuickShotUtils
import SnapKit

protocol SplashViewControllerInput
{
  func displaySomething(viewModel: SplashViewModel)
}

protocol SplashViewControllerOutput
{
  func checkUserOnBoardingState(request: SplashRequest)
}

class SplashViewController: CRXBaseViewController, SplashViewControllerInput
{
  var output: SplashViewControllerOutput!
  var router: SplashRouter!
  
  // MARK: Object lifecycle
  
  override init() {
    super.init()
    SplashConfigurator.sharedInstance.configure(self);
  }
  
  required convenience init(coder: NSCoder) {
    self.init(coder: coder);
  }

  
  // MARK: View lifecycle
  lazy var box = UIView()
  
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    buildViewLayout()
  }
  
  // MARK: Event handling
  
  func buildViewLayout()
  {
    // NOTE: Ask the Interactor to do some work
    
    box.backgroundColor = UIColor.randomColor();
    self.view.addSubview(box)
    box.snp_makeConstraints { make in
      make.width.height.equalTo(50)
      make.center.equalTo(self.view)
    }

    self.showProgressIndicator();
    
    let request = SplashRequest()
    output.checkUserOnBoardingState(request)
  }
  
  // MARK: Display logic
  
  func displaySomething(viewModel: SplashViewModel)
  {
    // NOTE: Display the result from the Presenter
    
    // nameTextField.text = viewModel.name
  }
}
