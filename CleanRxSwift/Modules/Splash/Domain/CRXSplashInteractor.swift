//
//  CRXSplashInteractor.swift
//  CleanRxSwift
//
//  Created by Pedro Brito on 22/06/16.
//  Copyright (c) 2016 pedroml.brito. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import RxSwift

protocol CRXSplashInteractorProtocol {
  func updateUserIsDone() -> Observable<Bool>
}


class CRXSplashInteractor: CRXSplashInteractorProtocol {
 
  var process: CRXSplashProcess!
  
  init(process: CRXSplashProcess) {
    self.process = process
  }
  
  // MARK: Business logic
  
  func updateUserIsDone() -> Observable<Bool> {
//    return self._process.checkIfOnboardingIsDone().delaySubscription(RxTimeInterval(5), scheduler: ConcurrentDispatchQueueScheduler(globalConcurrentQueueQOS: .background)).observeOn(MainScheduler.instance).doOnError { error in
//      print("ERROR: \(error)");
//    }
    
    
    return self.process.checkIfOnboardingIsDone().delaySubscription(RxTimeInterval(2), scheduler: ConcurrentDispatchQueueScheduler(qos: .background)).observeOn(MainScheduler.instance).catchError { (error) -> Observable<Bool> in
      print("ERROR: \(error)")
      return Observable.just(false)
    }
  }
  
}
