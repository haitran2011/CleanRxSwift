//
//  SplashPresenter.swift
//  CleanRxSwift
//
//  Created by Pedro Brito on 22/06/16.
//  Copyright (c) 2016 pedroml.brito. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import RxSwift

protocol SplashPresenterInput
{
  func presentSomething(response: SplashResponse)
}

protocol SplashPresenterOutput: class
{
  func displaySomething(viewModel: SplashViewModel)
}

class SplashPresenter: SplashPresenterInput
{
  weak var output: SplashPresenterOutput!
 
  weak var interactor: SplashInteractor!;
  
  // MARK: Presentation logic
  
  var subscription: Observable<Bool>!
  
  func presentSomething(response: SplashResponse)
  {
    // NOTE: Format the response from the Interactor and pass the result back to the View Controller
    
    let viewModel = SplashViewModel()
    output.displaySomething(viewModel)
    
    
//    subscription = interactor.updateUserIsDone().observeOn(MainScheduler.instance).subscribe({ (event) in
//      
//    })

    
  }
  

  func processOnBoardingState(isDone: Bool){
  
  }
}
